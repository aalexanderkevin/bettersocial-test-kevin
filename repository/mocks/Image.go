// Code generated by mockery v2.27.1. DO NOT EDIT.

package mocks

import (
	model "bettersocial/model"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Image is an autogenerated mock type for the Image type
type Image struct {
	mock.Mock
}

// Upload provides a mock function with given fields: _a0, _a1
func (_m *Image) Upload(_a0 context.Context, _a1 []byte) (*model.Image, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *model.Image
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, []byte) (*model.Image, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, []byte) *model.Image); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Image)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, []byte) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewImage interface {
	mock.TestingT
	Cleanup(func())
}

// NewImage creates a new instance of Image. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewImage(t mockConstructorTestingTNewImage) *Image {
	mock := &Image{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
